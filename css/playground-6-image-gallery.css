/* ===================================================
   PLAYGROUND 6: INTERACTIVE IMAGE GALLERY
   ===================================================
   
   Welcome to advanced visual storytelling! This playground combines 
   everything you've learned with sophisticated image effects and 
   overlay transitions.
   
   üì∏ THE CREATIVE CHALLENGE:
   These landscape photos need to feel immersive and engaging. Users 
   should feel drawn into each scene with smooth zoom effects and 
   elegant text reveals.
   
   This is the kind of gallery you'd see on premium portfolio sites, 
   travel blogs, and high-end e-commerce product showcases.
   
   üéØ LEARNING GOALS:
   - Master advanced transform techniques (scale, translate combinations)
   - Create elegant overlay transitions with opacity and positioning
   - Understand performance implications of image animations
   - Build cinematic user experiences with sophisticated timing
   
   üìù YOUR MISSION:
   Transform this static photo grid into an immersive visual experience 
   that makes viewers want to explore every image!
   
   ================================================= */

/* STEP 1: Understanding Image Gallery UX
   ======================================
   
   üîç OBSERVE: Look at the gallery in your browser and hover over the images.
   
   Current problems:
   - Images feel flat and non-interactive
   - No way to preview what each image is about
   - Static presentation doesn't invite exploration
   - Missing the "wow factor" that engages users
   
   Professional image galleries solve this with:
   - Subtle zoom effects that create depth
   - Elegant text overlays that appear on demand
   - Smooth transitions that feel cinematic
   - Performance optimizations for smooth interactions
*/

/* STEP 2: Gallery Grid Structure
   ==============================
   
   A clean, responsive grid that showcases images beautifully.
*/

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
  padding: 1rem;
  max-width: 800px;
  margin: 0 auto;
}

.gallery-item {
  position: relative;
  border-radius: 12px;
  overflow: hidden; /* This is crucial for the zoom effect */
  cursor: pointer;

  /* Subtle shadow for depth */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

  /* TODO #1: Add gallery item transition
     
     The container itself will have a subtle elevation effect:
     transition: box-shadow 0.3s ease, transform 0.3s ease;
  */
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

/* STEP 3: Image Placeholder Styling
   =================================
   
   Since we're not using real images, we'll create beautiful 
   gradient placeholders that represent different landscapes.
*/

.image-placeholder {
  width: 100%;
  height: 200px;
  position: relative;

  /* TODO #2: Add the zoom transition
     
     This is where the magic happens! The image will scale up on hover:
     transition: transform 0.6s ease;
     
     Notice we're using 0.6s - longer than buttons or cards because 
     this is a more cinematic, contemplative interaction.
  */
  transition: transform 0.6s ease;
  will-change: transform;
}

/* Beautiful gradient "images" */
.mountain {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.ocean {
  background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
}

.forest {
  background: linear-gradient(135deg, #00b894 0%, #00a085 100%);
}

.sunset {
  background: linear-gradient(135deg, #fd79a8 0%, #fdcb6e 100%);
}

/* STEP 4: Text Overlay System
   ===========================
   
   The overlay starts hidden and reveals on hover with elegant transitions.
*/

.image-overlay {
  /* Positioning */
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;

  /* Visual styling */
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
  color: white;
  padding: 2rem 1.5rem 1.5rem;

  /* Typography */
  text-align: left;

  /* TODO #3: Set the initial hidden state
     
     The overlay should start invisible and slide up from below:
     opacity: 0;
     transform: translateY(100%);
     
     This positions it completely below the visible area.
  */
       opacity: 0;
     transform: translateY(100%);

  /* TODO #4: Add overlay transition
     
     Smooth transitions for both opacity and position:
     transition: opacity 0.4s ease, transform 0.4s ease;
     
     Slightly faster than the image zoom for responsive layering.
  */
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.image-overlay h4 {
  margin: 0 0 0.5rem 0;
  font-size: 1.2rem;
  font-weight: 700;
}

.image-overlay p {
  margin: 0;
  font-size: 0.9rem;
  opacity: 0.9;
  line-height: 1.4;
}

/* STEP 5: The Hover Challenge - Cinematic Effects!
   ================================================
   
   üéØ GOAL: Create a sophisticated hover experience that combines:
   - Image zoom for depth and engagement
   - Text overlay reveal for information
   - Container elevation for interactive feedback
   
   üí° TECHNIQUE HINTS:
   - transform: scale() for zoom effects (try 1.1 or 1.15)
   - opacity and translateY for overlay reveals
   - Box-shadow changes for container depth
   
   üîß YOUR CINEMATIC TASK: Design the complete hover experience!
*/

.gallery-item:hover {
  /* TODO #5: Add container elevation
     
     The whole gallery item should lift slightly on hover:
     transform: translateY(-4px);
     box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
     
     Subtle elevation that doesn't compete with the image zoom.
  */
   transform: translateY(-4px);
   box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

.gallery-item:hover .image-placeholder {
  /* TODO #6: Add the zoom effect
     
     The image should zoom in smoothly:
     transform: scale(1.1);
     
     1.1 means 10% larger - subtle but impactful.
     Try 1.15 for more drama, or 1.05 for subtlety!
  */
  transform: scale(1.1);
}

.gallery-item:hover .image-overlay {
  /* TODO #7: Reveal the overlay
     
     The text overlay should slide up and fade in:
     opacity: 1;
     transform: translateY(0);
     
     This brings it into view with smooth animation.
  */
   opacity: 1;
   transform: translateY(0);
}

/* STEP 6: Experience the Cinema!
   ==============================
   
   üéâ CINEMATIC MOMENT: Complete TODOs #1-7:
   1. Add transitions to the gallery item container
   2. Add zoom transition to the image placeholder
   3. Set overlay initial hidden state (opacity 0, translateY 100%)
   4. Add overlay transition timing
   5. Create container elevation on hover
   6. Add image zoom on hover
   7. Reveal overlay on hover
   8. Save and test!
   
   üé¨ TESTING EXPERIENCE:
   - Hover slowly over each image
   - Notice the layered timing: container lifts, image zooms, text reveals
   - Try hovering and leaving quickly - do all animations reverse smoothly?
   - Does it feel cinematic and engaging?
*/

/* STEP 7: Advanced Performance Techniques
   =======================================
   
   Image galleries can be performance-intensive. Let's optimize!
*/

/* TODO #8: GPU Acceleration (Advanced)
   
   Force hardware acceleration for smoother animations:
   Add this to .image-placeholder:
   
   will-change: transform;
   
   This tells the browser to prepare for transform animations.
   Use sparingly - only on elements that will definitely animate!
*/

/* TODO #9: Reduced Motion Accessibility
   
   Respect users who prefer reduced motion:
   
   @media (prefers-reduced-motion: reduce) {
     .image-placeholder,
     .image-overlay,
     .gallery-item {
       transition: none;
     }
     
     .gallery-item:hover .image-overlay {
       opacity: 1;
       transform: translateY(0);
     }
   }
   
   This shows the overlay instantly without animations for users 
   who find motion distracting or nauseating.
*/

/* EXPERIMENT ZONE! üß™
   ====================
   
   Now that you have a working gallery, try these cinematic variations:
   
   TODO #10: Different zoom levels
   Try these scale values on hover:
   - transform: scale(1.05);  (very subtle)
   - transform: scale(1.2);   (dramatic)
   - transform: scale(1.08);  (sweet spot?)
   
   TODO #11: Different overlay animations
   Instead of sliding up, try:
   - transform: translateY(-20px); opacity: 0; (slide down from top)
   - transform: scale(0.8); opacity: 0; (scale up from center)
   - transform: translateX(-100%); opacity: 0; (slide in from left)
   
   TODO #12: Staggered reveal timing
   Make overlay elements appear at different times:
   
   .image-overlay h4 { 
     transition: opacity 0.3s ease 0.1s; 
   }
   .image-overlay p { 
     transition: opacity 0.3s ease 0.2s; 
   }
   
   The title appears first, then the description!
   
   TODO #13: Color overlay effects
   Add color shifts on hover:
   
   .mountain:hover { filter: hue-rotate(30deg); }
   .ocean:hover { filter: brightness(1.1) saturate(1.2); }
   .forest:hover { filter: contrast(1.1); }
   .sunset:hover { filter: sepia(0.2); }
   
   Add filter to your image transition:
   transition: transform 0.6s ease, filter 0.6s ease;
   
   TODO #14: 3D rotation effects (Advanced)
   For a really dramatic effect:
   
   .gallery-item:hover .image-placeholder {
     transform: scale(1.1) rotateY(5deg);
   }
   
   Add perspective to the container:
   .gallery-item { perspective: 1000px; }
*/

/* STEP 8: Real-World Gallery Patterns
   ===================================
   
   These techniques appear in premium digital experiences:
   
   üè† REAL ESTATE: Property photos with zoom and detail overlays
   üçΩÔ∏è RESTAURANTS: Food photography with ingredient information
   üé® PORTFOLIOS: Artwork showcases with project details
   üõçÔ∏è E-COMMERCE: Product galleries with feature highlights
   üì∏ PHOTOGRAPHY: Portfolio galleries with EXIF data
   üèûÔ∏è TRAVEL: Destination showcases with location information
   
   Your gallery uses the same sophisticated techniques as:
   - Apple product showcases
   - Airbnb listing photos
   - Behance project galleries
   - Unsplash photo collections
*/

/* STEP 9: Gallery Performance Deep Dive
   =====================================
   
   üöÄ PERFORMANCE BEST PRACTICES:
   
   EFFICIENT PROPERTIES:
   ‚úÖ transform: scale() - GPU accelerated
   ‚úÖ opacity - GPU accelerated
   ‚úÖ transform: translate() - GPU accelerated
   
   EXPENSIVE PROPERTIES:
   ‚ùå width/height changes - causes layout
   ‚ùå filter effects - can be GPU intensive
   ‚ùå box-shadow on many elements - can be slow
   
   üéØ OPTIMIZATION TECHNIQUES:
   - Use transform instead of changing dimensions
   - Limit the number of simultaneously animating elements
   - Use will-change sparingly and remove after animation
   - Consider intersection observer for large galleries
   
   ‚è±Ô∏è TIMING CONSIDERATIONS:
   - Images: 0.6s feels cinematic without being slow
   - Overlays: 0.4s provides responsive information reveal
   - Containers: 0.3s keeps UI feedback snappy
*/

/* STEP 10: Focus States for Accessibility
   =======================================
   
   Gallery items should be keyboard accessible too!
*/

.gallery-item:focus-within {
  /* TODO #15: Add focus state
     
     Copy your hover effects for keyboard users:
     - Same transform and box-shadow as :hover
     - Add: outline: 3px solid #74b9ff; outline-offset: 2px;
     
     This ensures screen reader users and keyboard navigators 
     get the same rich experience.
  */
}

/* DEBUGGING SECTION üîß
   =====================
   
   Common image gallery issues:
   
   ‚ùå "My zoom effect is choppy!"
   ‚úÖ Check: Are you using transform: scale() not width/height?
      Add will-change: transform to the image element.
   
   ‚ùå "The overlay flickers on hover!"
   ‚úÖ Ensure: The overlay is inside the hover target (.gallery-item)
      and transitions are on the overlay itself.
   
   ‚ùå "Images zoom out of their containers!"
   ‚úÖ Check: Is overflow: hidden set on .gallery-item?
   
   ‚ùå "The timing feels off!"
   ‚úÖ Try: Different transition durations. Images usually need 
      longer transitions than UI elements.
   
   ‚ùå "Overlays appear instantly on mobile!"
   ‚úÖ Remember: Mobile doesn't have hover. Consider :active states
      or always-visible overlays on small screens.
   
   üéâ SUCCESS INDICATORS:
   - Smooth, cinematic zoom effects without jank
   - Elegant text overlays that enhance the images
   - Layered timing that feels orchestrated
   - Accessible focus states for keyboard users
   - Performance that feels smooth on various devices
*/

/* üéâ CONGRATULATIONS!
   ===================
   
   You've created a gallery worthy of premium digital experiences!
   
   You now understand:
   ‚úÖ Advanced transform techniques for visual impact
   ‚úÖ Layered animation timing for cinematic effects
   ‚úÖ Performance optimization for smooth interactions
   ‚úÖ Accessibility integration in complex visual interfaces
   ‚úÖ The balance between drama and usability
   
   This gallery demonstrates mastery of:
   - Sophisticated visual storytelling
   - Performance-conscious animation design
   - Multi-layer interaction choreography
   - Professional image presentation techniques
   
   You've built something that could be used for:
   - High-end portfolio websites
   - E-commerce product showcases
   - Travel and lifestyle blogs
   - Photography galleries
   - Real estate listings
   
   Ready for the final challenge? Let's create a professional 
   notification system that handles complex state transitions! üçû‚ú®
*/
